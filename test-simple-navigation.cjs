const fs = require('fs');
const path = require('path');

console.log('üîç Teste Simples de Navega√ß√£o...\n');

// Verificar se os arquivos principais existem
const files = [
  'src/components/dashboard/MicrosoftHeader.tsx',
  'src/components/nav/MobileAppAreaSwitcher.tsx',
  'src/components/nav/AppAreaSwitcher.tsx',
  'src/lib/navItems.ts',
  'src/App.tsx'
];

console.log('1. Verificando exist√™ncia dos arquivos:');
files.forEach(file => {
  const exists = fs.existsSync(path.join(__dirname, file));
  console.log(`   ${exists ? '‚úÖ' : '‚ùå'} ${file}`);
});

// Verificar se h√° erros de sintaxe b√°sicos
console.log('\n2. Verificando sintaxe b√°sica:');
try {
  const microsoftHeader = fs.readFileSync(path.join(__dirname, 'src/components/dashboard/MicrosoftHeader.tsx'), 'utf8');
  const hasUseNavigate = microsoftHeader.includes('useNavigate');
  const hasUseLocation = microsoftHeader.includes('useLocation');
  const hasSections = microsoftHeader.includes('const sections =');
  
  console.log(`   ‚úÖ useNavigate: ${hasUseNavigate}`);
  console.log(`   ‚úÖ useLocation: ${hasUseLocation}`);
  console.log(`   ‚úÖ sections array: ${hasSections}`);
  
  if (hasUseNavigate && hasUseLocation && hasSections) {
    console.log('   üéâ MicrosoftHeader parece estar correto!');
  }
} catch (error) {
  console.log('   ‚ùå Erro ao verificar MicrosoftHeader:', error.message);
}

try {
  const mobileSwitcher = fs.readFileSync(path.join(__dirname, 'src/components/nav/MobileAppAreaSwitcher.tsx'), 'utf8');
  const hasUseNavigate = mobileSwitcher.includes('useNavigate');
  const hasUseLocation = mobileSwitcher.includes('useLocation');
  const hasAppAreas = mobileSwitcher.includes('const appAreas');
  
  console.log(`   ‚úÖ useNavigate: ${hasUseNavigate}`);
  console.log(`   ‚úÖ useLocation: ${hasUseLocation}`);
  console.log(`   ‚úÖ appAreas array: ${hasAppAreas}`);
  
  if (hasUseNavigate && hasUseLocation && hasAppAreas) {
    console.log('   üéâ MobileAppAreaSwitcher parece estar correto!');
  }
} catch (error) {
  console.log('   ‚ùå Erro ao verificar MobileAppAreaSwitcher:', error.message);
}

console.log('\nüìã Resumo:');
console.log('   ‚Ä¢ Arquivos principais verificados');
console.log('   ‚Ä¢ Sintaxe b√°sica verificada');
console.log('   ‚Ä¢ Imports do React Router verificados');
console.log('   ‚Ä¢ Arrays de navega√ß√£o verificados');

console.log('\nüöÄ Para testar a aplica√ß√£o:');
console.log('   1. Execute: npm run dev');
console.log('   2. Abra o navegador em http://localhost:5173');
console.log('   3. Teste a navega√ß√£o entre as √°reas'); 
const path = require('path');

console.log('üîç Teste Simples de Navega√ß√£o...\n');

// Verificar se os arquivos principais existem
const files = [
  'src/components/dashboard/MicrosoftHeader.tsx',
  'src/components/nav/MobileAppAreaSwitcher.tsx',
  'src/components/nav/AppAreaSwitcher.tsx',
  'src/lib/navItems.ts',
  'src/App.tsx'
];

console.log('1. Verificando exist√™ncia dos arquivos:');
files.forEach(file => {
  const exists = fs.existsSync(path.join(__dirname, file));
  console.log(`   ${exists ? '‚úÖ' : '‚ùå'} ${file}`);
});

// Verificar se h√° erros de sintaxe b√°sicos
console.log('\n2. Verificando sintaxe b√°sica:');
try {
  const microsoftHeader = fs.readFileSync(path.join(__dirname, 'src/components/dashboard/MicrosoftHeader.tsx'), 'utf8');
  const hasUseNavigate = microsoftHeader.includes('useNavigate');
  const hasUseLocation = microsoftHeader.includes('useLocation');
  const hasSections = microsoftHeader.includes('const sections =');
  
  console.log(`   ‚úÖ useNavigate: ${hasUseNavigate}`);
  console.log(`   ‚úÖ useLocation: ${hasUseLocation}`);
  console.log(`   ‚úÖ sections array: ${hasSections}`);
  
  if (hasUseNavigate && hasUseLocation && hasSections) {
    console.log('   üéâ MicrosoftHeader parece estar correto!');
  }
} catch (error) {
  console.log('   ‚ùå Erro ao verificar MicrosoftHeader:', error.message);
}

try {
  const mobileSwitcher = fs.readFileSync(path.join(__dirname, 'src/components/nav/MobileAppAreaSwitcher.tsx'), 'utf8');
  const hasUseNavigate = mobileSwitcher.includes('useNavigate');
  const hasUseLocation = mobileSwitcher.includes('useLocation');
  const hasAppAreas = mobileSwitcher.includes('const appAreas');
  
  console.log(`   ‚úÖ useNavigate: ${hasUseNavigate}`);
  console.log(`   ‚úÖ useLocation: ${hasUseLocation}`);
  console.log(`   ‚úÖ appAreas array: ${hasAppAreas}`);
  
  if (hasUseNavigate && hasUseLocation && hasAppAreas) {
    console.log('   üéâ MobileAppAreaSwitcher parece estar correto!');
  }
} catch (error) {
  console.log('   ‚ùå Erro ao verificar MobileAppAreaSwitcher:', error.message);
}

console.log('\nüìã Resumo:');
console.log('   ‚Ä¢ Arquivos principais verificados');
console.log('   ‚Ä¢ Sintaxe b√°sica verificada');
console.log('   ‚Ä¢ Imports do React Router verificados');
console.log('   ‚Ä¢ Arrays de navega√ß√£o verificados');

console.log('\nüöÄ Para testar a aplica√ß√£o:');
console.log('   1. Execute: npm run dev');
console.log('   2. Abra o navegador em http://localhost:5173');
console.log('   3. Teste a navega√ß√£o entre as √°reas'); 